name: Terraform

on:
  push:
    branches:
      - master
      - main
      - dev
      - feature/*
  pull_request:
    branches:
      - feature/*

jobs:
  tflint-checks:
    name: TFLint Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: terraform-linters/setup-tflint@v2
        name: Setup TFLint
        with:
          tflint_version: v0.38.1
      - name: Show version
        run: tflint --version
      - name: Init TFLint
        run: tflint --init
      - name: Run TFLint
        run: tflint -f compact
  tfsec-checks:
    name: TFSec Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true
  checkov:
    name: Checkov Checks
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: '.'
  infracost:
    name: Infracost Checks
    continue-on-error: true
    env: 
      TF_ROOT: '.'
      INFRACOST_LOG_LEVEL: debug
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: $INFRACOST_API_KEY
          github-token: ${{ github.token }}
      # Checkout the base branch of the pull request (e.g. main/master).
      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.base.ref }}'

      # Generate Infracost JSON file as the baseline.
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=$TF_ROOT \
                              --format=json \
                              --out-file=/tmp/infracost-base.json

      # Checkout the current PR branch so we can create a diff.
      - name: Checkout PR branch
        uses: actions/checkout@v3

      # Generate an Infracost diff and save it to a JSON file.
      - name: Generate Infracost diff
        run: |
          infracost diff --path=$TF_ROOT \
                          --format=json \
                          --compare-to=/tmp/infracost-base.json \
                          --out-file=/tmp/infracost.json
      - name: Post Infracost comment
        run: |
            infracost comment github --path=/tmp/infracost.json \
                                     --repo=$GITHUB_REPOSITORY \
                                     --github-token=${{ github.token }} \
                                     --pull-request=${{github.event.pull_request.number}} \
                                     --behavior=update  

  terraform-plan:
    name: Terraform Plan
    environment: 'development'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      status: ${{ steps.terraform-plan.outcome }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: "TerraformPlan"
      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Plan
        id: terraform-plan
        run: |
            ./plan.sh
        env:
          AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
          TF_STATE_KEY: ${{ secrets.TF_STATE_KEY }}
      - name: Upload Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          if-no-files-found: error
          path: |
            plan.out
            .terraform
            .terraform.lock.hcl

  terraform-apply:
     name: Terraform Apply
     needs: terraform-plan
     runs-on: ubuntu-latest
     steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: "TerraformApply"
      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Download Plan
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan
      - name: Terraform Apply
        id: terraform-apply
        run: |
            chmod -R a+x .terraform
            ./apply.sh
